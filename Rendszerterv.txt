0. A rendszer célja
 A rendszer célja egy olyan játék megvalósítása, amelyben a játékosok saját felhasználói fiókjukon keresztül tudnak belépni a játékba. A profiljukat saját maguk irányíthatják, változtathatják a profilképüket, önállóan, meccseket játszva jutnak tapasztalatpontokhoz és goldhoz, amivel növelhetik szintjüket a játékban. 50 különböző karakter közül választhatják ki a nekik legszimpatikusabbakat, legkézenfekvőbbeket, amelyek oldalán indulnak majd a harcokba. Kitapasztalhatják a stratágia és küzdelem örömeit, ahogy a vereség árnyoldalait is.
 Ezen versenysorozaton keresztül tapasztalatot szereznek és fejlődik a koncentrációs, illetve szellemi képességeik. A meccsek végeztével, ugyanis a vesztes is szerez jutalmat, így meg kell tanulni a keveset is értékelni.
 A játék önmagában nem csak a szellemi képességek növelését veszi alapul, hanem a kapcsolatépítésre is törekedik, hiszen a játékosok egymás ellen is rendezhetnek meccseket, amivel egymás képességeit felmérhetik és időt töltenek a másik megismerésével.
 --------------------------------------------------------------------------------------------------------------------------------------
1. Projekt terv
 A program a megadott határidőn belül, azaz körülbelül 3 hónapon belül elkészül. A játék készítésére 4 fejlesztő áll rendelkésünkre, illetve segítők az esetleges problémák megoldása véget.
 A fejlesztőket 2 csoportra osztjuk, ketten a webes, és ketten az androidos verzióval fognak komolyabban foglalkozni. A párosokat szintén szétosztjuk egy frontendes és egy backendes részre. A csoport hetente egyszer leül és közösen átbeszéli a már meglévő folyamatokat, illetve azok tesztelését és az esetleges hibákat. Ha nem merülnek fel újabb kérdések, akkor a további feladatok és fejlesztések kerülnek előtérbe.
 Ezenkívül plusz feladatnak minősül a specifikációk megírása, azaz a program készítésének dokumentálása, illetve a játékhoz szükséges design tervek, karakterek, profilképek, képességek, itemek kidolgozása. 
  Elsősorban miután kész a rendszerterv és elkészül egy UML ábra a program megvalósítására, elkészül egy alaprogram, amire a későbbiekben lehet építeni és továbbfejleszteni. Az alapprogram célja egy müködőképes játék létrehozása, mindenféle bonyolultság nélkül, csak a rendes működésre törekedve. Ha ez kész, akkor a követelmény specifikációban leírt követelménylista alapján haladva lesznek hozzáadva az adott szinten elvárt funkciók, amíg el nem jutunk a vágyálomrendszerben leírt és elképzelt játékhoz.
 --------------------------------------------------------------------------------------------------------------------------------------
2. Követelmények
Modul        |ID |Név                   |Verziószám |Kifejtés
Bejelentkezés|K1 |Belépés               |0.1 verzió
A játékos a felhasználó neve és a jelszava alapján léphet be a játékba.
Karakter     |K5 |Karakter adatai       |0.1 verzió
A karaktereknek legyenek életerejük és manájuk.
Játék        |K10|Harcok folyamata      |0.1 verzió
A harcok során a játékos körönként tudjon goldot kapni, emelett pedig eldöntheti, hogy skilleket vagy itemet vagy esetleg ezek közül egyiket sem választja.
Felhasználó  |K2 |Gold                  |0.2 verzió
A felhasználó rendelkezik golddal, amiből hősöket tud venni.
Csaták       |K16|Bot játékosok         |0.2 verzió
Bot meccses csaták.
Felhasználó  |K4 |Karakter szerzés      |0.2 verzió
Első bejelentkezéskor a felhasználónak 5 véletlenszerűen megjelenő karakter közül kell választania kettőt. Eleinte a játékos ezzel a kettő karakterrel játszhat, majd később vehet többet, amiért golddal fizethet.
Karakter     |K7 |Karakter képességek   |0.2 verzió
A karaktereknek 4 alapképessége van.
Játék        |K11|Végkimenetele         |0.3 verzió
A harcok addig tartsanak, míg az egyik karakter meg nem hal vagy míg az egyik játékos fel nem adja. A győztes kapjon goldot és xp-t, míg a vesztes csak xp-t kapjon.
Itemek       |K12|Cooldown              |0.3 verzió
A skilleknek legyen cooldownja, az elsőt minden körben lehessen használni, a másodikat minden második körben és ez így növekedjen körönként. AZ itemekből származó skilleket minden 3. körben újra fel lehessen használni.
Játék        |K9 |Gold szerzés          |0.3 verzió
Goldot a harcok során körönként lehessen szerezni.
Itemek       |K13|Item                  |0.4 verzió
Item vásárlásánál a játékos maradjon ki egy körből. Két fajta item legyen passzív és aktív. Ha a játékos egyiket sem szeretné használni, akkor legyen egy olyan lehetőség, hogy kimarad egy körből.
Felhasználó  |K3 |Tapasztalati pont     |0.4 verzió
A felhasználó szintjét határozza meg a tapasztalati pontja.
Karakter     |K6 |Karakter tulajdonságok|0.4 verzió
A karakterek statja.
Itemek       |K14|Passzív itemek        |0.5 verzió
A passzív item növelje a statot.
Itemek       |K15|Aktív itemek          |0.5 verzió
Az aktív itemek egy új skillt adnak. 
Karakter     |K8 |Karakter skinek       |0.5 verzió
Karakterek mellett a játékosok skineket is vásárolhatnak, amik megváltoztatják a karakterük alap statját.
Csaták       |K17|PVP játékmód          |0.6 verzió
PVP játékmód bevezetése.
Profilkép    |K18|Profilkép változtatás |0.6 verzió
Egyedi profilkép készítése.
 --------------------------------------------------------------------------------------------------------------------------------------
3. Fizikai környezetek
Webes rész: Visual Studio Code, vagy Notepad++, Weblap írása(html,css,javascript és php)
Androidos rész: A androidos verzió az Android Studio 3.5.3 verziójával készül.
 --------------------------------------------------------------------------------------------------------------------------------------
4. Üzleti folyamatok modellje
 Első lépésben a funkcionális- és követelmény specifikáció, illetve a rendszerterv elkészítése a lényeg. Ha a szöveges dokumentumokban leírtak megfelelnek a valóságnak és képesek vagyunk tartani az ütemtervet, akkor jövetnek a további feladatok. Fontos, hogy a leírt dolgokat jól átgondoljuk, a megvalósítási lehetőségeket feltérképezzük és ezek után már csak az itt leírtak alapján le kelljen kódolni a játékot. 
 A funkcionális specifikáció (angolul: functional specification) a felhasználó szemszögéből írja le a rendszert. A követelményspecifikációból ismerjük az elkészítendő rendszer követelményeit, üzleti folyamatait.
 A követelményspecifikáció (angolul: requirement specification) helyét a szoftver életciklusban megismerhettük a Rendszerszervezés című fejezetből. Itt az elkészítéséhez szükséges technikákat ismertetjük. 
 A rendszertervben a program megvalósításának lépései vannak kifejtve részletesen.
 A design tervekben a frontendesek dolga a design terveinek és a játék kinézetének megvalósítása. Ezen terveket mind androidos, mind webes felületen el kell készíteni. Ez két ember feladata lenne, a webes és androidos csoportnak külön frontendesei végzik ezeknek a kidolgozását.
 Az androidos csapat Android Studioban készíti el a program telefonos verzióját, míg a másik csoporté a webes platform megalkotása. A csapatoknak szintén két része van, vannak a frontendesek és a backendesek, ezek szintén a saját részüket veszik ki  a feladatokból, de ha úgy van segítenek a másik félnek a játék megvalósításában.
 Az, hogy pontosan ki, min dolgozott, azt a trello ábrákon lehet nyomonkövetni.
 --------------------------------------------------------------------------------------------------------------------------------------
5. Funkcionális terv
 A programba felhasználónév és jelszó segítségével lehet bejelentkezni. Ezen kombinációkat szükséges tárolni, hogy ne lehessen egyszerre két embernek ugyanaz a felhasználóneve, illetve a jelszavakat titkosítani kell, hogy ne lehessen könnyen feltörhető a rendszer.
 A játékba belépve, a felhasználói profilon keresztül lehet profilképet, jelszót és felhasználónevet változtatni. Utóbbi kettőnél fontos, hogy ne csak egyszer adja meg az adott nevet/jelszót, ezzel igazolva a felhasználó személyazonosságát (jó, nyilván az sem kizárt, hogy valamit elgépel az ember, de ez egy olyan alap tulajdonság, ami minden felhasználói felületen elérhető és bevált, vagy legalább is sok helyen alkalmazzák).
 A főoldalon a meglévő hősök képére kattintva meg lehet tekinteni a hősök adatait, ha a skinek között váltogatunk, akkor annak megfelelően változzon a hős statja.
  A boltban karakter vagy skin vásárlása esetén a felhasználó által birtokolt gold mennyiségből levonásra kerüljön az megvásárolt karakter/skin ára, illetve azt is írja ki a rendszer, ha a játékosnak nincs elég pénze megvásárolni az adott karaktert, vagy csak egyszerűen egy szűrő segítségével ne jelenítse meg a megvásárlás funkciót az ilyen karakterek/skinek esetén.
   A játék menüpontra kattintva a felhasználó beállíthatja, hogy milyen játékmódok közül, mit választ ki és elindít egy meccskeresési folyamatok. Bot meccsek esetén ez kihagyható, hisz ott azonnal talál ellenfelet.
   A hősválasztó képernyőn a karakterekre kattintva, jelenjen meg a karakter képe a felhasználó neve alatt, mint aktuálisan pickelni készült hős. Ha a karakterválasztás végéig nem lockol le a játékos egyetlen hőst sem, akkor automatikusan a kijelölt hőst fogja a rendszer választani neki. A hősválasztás leteltével még van 10 másodperc a harc kezdetéig.
   A csata képernyőn a játékos rengeteg mindent lát. Először is bal oldalt a képernyő alján az általa választott karakter képével és statjával találkozik. Itt láthatja majd a megvásárolt passzív itemjeit is. Középen vannak a karakterek skilljei, illetve plusz két hely az aktív itemeknek. Jobb oldalt lent vannak a harci lehetőségei: elfogadja a választásait és átadja a kört a másik játékosnak, vásárol a boltban, vagy feladja. Ezen lehetőségek felett látja, hogy az adott körben mennyi golddal rendelkezik. A gold működése a boltban ugyanazon elv alapján működik, mint a főprogramban. Fent, a játékossal szemben látható az enemy, és annak néhány statja. A TAB billentyűre kattinva megjelenik egy összefoglaló, hogy aktuálisan a játékos milyen itemekkel és stattal rendelkezik és, hogy mit lehet tudni az enemyről.
   A meccs végeztével visszatérünk a főprogramba, ahol feldob egy összefoglalót a meccs kimeneteléről és a szerzett tapasztalati pont és gold mennyiségét is mutatja. Az itt jóváírt tapasztalati pont és gold hozzáadódik a felhasználó által már megszerzett goldhoz és tapasztalati ponthoz. Ha a tapasztalati pont eléri a maximumot, akkor a játékos szintet lép. Szintlépéskor pedig a játékos plusz goldot szerez.
   A kilépés menüponttal a játékos kilép a játékból.
 --------------------------------------------------------------------------------------------------------------------------------------
6. Absztrakt domain modell
Domain specifikáció:
- bejelentkezés: A játékba való belépés jelszó és felhasználónév köteles.
- bolt: Itt vásárolhatók karakterek, skinek, illetve játékon belül itemek.
- felhasználónév: A rendszerbe regisztrált felhasználó neve.
- gold: A játékban használatos fizető eszköz.
- item: Karakterek statját passzívan vagy aktívan növelő tárgy.
- játék: A program játék része.
- jelszó: A bejelentkezéshez szükséges adat.
- karakter: A játékban használható hős.
- képességek: A karakterek rendelkeznek 4 alapképességgel, amellyel képesek támadni vagy védekezni.
- kijelentkezés: A programból való kilépést jelenti.
- profil: A felhasználó alapadatait tartalmazó rész.
- skin: A karatkereknek lehet vásárolni más kinézetet, amely ronhat vagy javíthat a statján.
- stat: A karakterek képességeinek mértéke egy adott táblán megmutatva, ezzel szemléltetik, hogy egymáshoz képest mennyire erősek. Összességében minden karakter ugyanolyan erős, csak ez más teljesítményben mutatkozik meg.
- tapasztalati pont: A tapasztalati pontok segítségével tud a felhasználó szintet lépni, és ezzel mutatja a rendszerben elért teljesítményét. 
Absztrakt komponensek:
 A bejelentkezéshez szükséges a felhasználónév és a jelszó. Csak akkor tudsz kijelentkezni, ha egyszer kiléptél.
 A bejelentkezést követően meg lehet tekinteni a játékosok profilját, a boltot használni lehet, illetve játékot lehet indítani.
 A profilon látható egy-egy játékos neve, profilképe, hogy mennyi golddal rendelkezik és hogy milyen szintet ért el eddig a tapasztalati pontok megszerzésével.
 A főprogramban lehet látni a karaktereket. A karakterekre kattintva lehet őket közelebbről megtekinteni, itt látható statjuk, illetve hogy milyen skinek elérhetők rájuk.
 A játékbon belül lehet találkozni az itemekkel és itt lehet őket megvásárolni a karaktereknek amíg az összecsapás nem ér véget.
 --------------------------------------------------------------------------------------------------------------------------------------
7. Architekturális terv
Bejelentkezés/Regisztrációs esetek:
 A regisztráció során, ha már látező felhasználónevet adunk vagy ha olyan karaktereket használunk, amelyek nem megengedettek (pl.: vessző, pontosvessző, #, @ stb.), akkor hibaüzenetet kapunk.
 A bejelentkezés során, ha nem megfelelő felhasználónevet vagy jelszót adunk meg, szintén hibaüzenetet jelez a rendszer.
Vásárlásnál:
 Ha megvásároltunk egy karaktert/skint, akkor az a karakter már ne jelenjen meg a boltban megvásárolható karakterek között.
 Ha nincs meg egy karakter, akkor annak a karakternek a skinjét sem lehet megvásárolni.
 Ha nincs elegendő goldunk, akkor szintén ugyanez a helyzet áll fenn.
Játékon belül:
 Egy képességet egy körön belül csak egyszer lehet használni.
 Passzív itemet ne rakja a rendszer aktív itemek közé.
 A rendszer ne mutassa meg az enemy statjait.
 Ha elmegy az internet kapcsolat vagy valamilyen oknál fogva az egyik játékos feladás nélkül kilép egy pvp meccsből, akkor a meccset elhagyó játékos a következő játékát csak bot ellen indíthatja. Az elhagyott meccsből a lejátszott ideig történő adatok alapján elveszíti a meccset. Miután az egyik játékos elhagyja a játékot a meccs véget ér. A bentmaradt játékos automatikusan nyeri a meccset, viszont nem szerez goldot. Mindkét játékos a meccs alatt gyűjtött tapasztalati pont felét kapja meg.
 Ha elmegy az internet kapcsolat vagy valamilyen oknál fogva egy játékos kilép egy bot meccsből, akkor az abból származó tapasztalati pontok elvesznek.
 Ha egy játékos több egymást követő meccs során ismeretlen okból elhagyja a meccset, akkor tiltást kap. Minél több alkalommal ismétlődik a meccsek elhagyása a tiltások ellenére a játékos egyere több ideig lesz tiltva és egy pontot elérve a fiókja véglegesen törlődik. Az első ilyen alkalommal, amikor egy játékos tiltást érdemel a rendszer 10 percre tiltja le és ennek időtartama minden alkalommal 10 perccel növekszik, amíg egy órás eltiltást nem kap ajátékos. Ezután egy napra, majd egy hétre, végül pedig egy hónapra is kaphat kitiltást, és ennek végereményeképpen a következő esetben perma bant kap. Ha egy játékos már kapott eltiltást, viszont ha ezt követően fél évig nem tesz semmi hasonló megrovást érdemlő dolgot, akkor a rendszer automatikusan leveszi az eddig rárakott tiltások hosszát és a felhasználó újból csak 10 percet kaphat egy tiltás alkalmával.
 --------------------------------------------------------------------------------------------------------------------------------------
8. Adatbázis terv
A 0.1-es verzióban 5 táblával tudunk dolgozni. Ez még csak egy alap adatbázis terv a programhoz. Van egy User, Karakter, Skin, Item és Képesség osztályunk. Az implementációs tervben, illetve az UML ábra 0.1-es verzióban látható ezek pontos kidolgozása. Jelenleg még csak a karakter táblát tudjuk összekapcsolni a skin és a képességek osztállyal.
 --------------------------------------------------------------------------------------------------------------------------------------
9. Implementációs terv

USER: Osztály
Név: string
Jelszó: string
Profilkép: Kép
BirtokoltKarakterek: Karakter Lista
XP: int
Gold: int

KARAKTER: Osztály
Képesség: Képesség Lista
Név: string
Kép: Kép
Életpont: double
Mana: double
Páncél: double
KritikusEsély: double
Ár: int

SKIN: Osztály
Karakter: Karakter
Név: string
Kép: Kép
Életpont: double
Mana: double
Páncél: double
KritikusEsély: double
Ár: int

ITEM: Osztály
Ikon: Kép
Ár: int

KÉPESSÉG: Osztály
Ikon: Kép
Manahasználat: double
ÚjratöltésiIdő: int

 --------------------------------------------------------------------------------------------------------------------------------------
10. Tesztterv
 - bejelentkezési teszt: A bejelentkezés folyamán fontos, hogy egy felhasználónév csak egyszer szerepeljen a rendszerben. Egy bejelentkezés csak akkor sikeres, ha a regisztrált felhasználónév és jelszó kombinációt helyesen írjuk be. Csak így lehessen belépni a programba.
 - profilkép teszt: A profilképeket lehessen változtatni és azt mentse el a rendszer.
 - tapasztalati pont teszt: A meccsek után szerzett tapasztalati pontok adódjanak hozzá a felhasználó által birtokolt tapasztalati pontokhoz. Ha a tapsztalati pontok eléri a következő szinthez szükséges maximumot, akkor a felhasználó szintet lépjen.
 - gold teszt: A felhasználó által szerzett gold adódjon hozzá a már birtokolt gold mennyiséghez, illetve karakter/skin vásárlása esetén vonódjon le a megvásárolandó karakter/skin árával megegyező érték. Ha nincs elég goldja a felhasználónak egy vásárlásra, akkor a rendszer automatikusan ne engedje vásárolni (NEM LEHET MÍNUSZ A GOLD).
 - skin teszt: Ha egy karakternek skineket vásárolunk, akkor ha megváltoztatjuk egy karakter skinjét, akkor annak megfelelően változzon meg a karakternek a statja is.
 - játékmód teszt: A megfelelő játékmódhoz kapcsolódó játék induljon el.
 - játék teszt: A játékon belüli folyamatok tesztelése. Értem ezalatt az adott körben választható eseményeket: kör vége opció.
 - képesség teszt: A képességek használata során az enemyt érje annyi sebzés, amennyi a kiválasztott képességek erejének összegével megegyezik. A felhasznált képességeket a következő körben a meghatározott cooldown ismeretében lehessen újra felhasználni.
 - item vásárlás teszt: A játékon belül itemet vásárolni a játékon belül szerzett goldból lehet. A vásárolt item értéke ebből kerül levonásra, ha nincs elég gold egy itemre azt ne lehessen megvenni.
 - passzív item teszt: A passzív itemek a karakterek statjára legyenek hatással.
 - aktív item teszt: Az aktív itemek bekerülnek a képességek közé és megegyező nagyságú cooldownnal rendelkeznek.
 - mana teszt: Csak egy megadott mennyiségű manából lehet képességeket használni. Ha nincs elég mana, ne engedélyezzen több képességet használni a rendszer egy körön belül.
 - életerő teszt: Az ellenfél által kiosztott sebzés mennyisége levonódjon az életerőből, ha nincs plusz pajzsa a hősnek ami felfogjon egy bizonyos mennyiségű sebzést. Ha van healelős képessége a karakternek, akkor annak használata töltsön vissza annyi életerőt, amennyit kell.
 - pajzs teszt: A pajzs plusz "életerőt" rendel a karakterhez. Ha sebzés éri a karaktert, akkor az először a pajzsból von le életerőt.
